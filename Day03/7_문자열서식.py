# 7_문자열서식.py

'''
    파이썬 여러줄 문자열을 주석처럼 사용할 수 있다
    변수에 저장하지 않고 주석처럼 사용한다

    === 파이썬 문자열 서식에 지정하는 자료형 ===

    자료형       서식
    str         {:s}        문자열
    int         {:d}        정수(10진수)
    float       {:f}        실수
    bool        {:b}        논리값
'''

print('[{:s}]'.format('파이썬'))        # 문자열 출력
print('[{:10s}]'.format('파이썬'))      # 문자열 뒤를 띄운다

print('[{:<10s}]'.format('파이썬'))     # 문자열 뒤를 띄운다
print('[{:>10s}]'.format('파이썬'))     # 문자열 앞을 띄운다
print('[{:^10s}]'.format('파이썬'))     # 문자열 앞 뒤를 띄운다

print('[{:=<10s}]'.format('파이썬'))    # 문자열 뒤를 띄운 후 = 으로 채운다
print('[{:=>10s}]'.format('파이썬'))    # 문자열 앞을 띄운 후 = 으로 채운다
print('[{:=^10s}]'.format('파이썬'))    # 문자열 앞 뒤를 띄운 후 = 으로 채운다

print('{:-^25s}'.format('영 수 증'))    # 문자열 앞 뒤를 띄운후 - 으로 채운다
print()     # 그냥 print()만 호출하면 한줄 내린다

print('{:d}'.format(1234500))
print('{:,d}'.format(1234500))
print()

print('현재시간 : [{:d} : {:d}]'.format(6, 16))
print('현재시간 : [{:2d} : {:2d}]'.format(6, 16))
print('현재시간 : [{:02d} : {:02d}]'.format(6, 16))

# 서식을 지정하지 않으면, 기본은 소수점 이하 6자리
print('{:f}'.format(20 / 3))   

# 서식을 지정하면, 내가 원하는 만큼만 출력 가능
print('{:.2f}'.format(20 / 3))  # 실수 소수점 두번째 자리까지 출력

# bool 값에 대해서 특수한 서식을 지정하지 않는 경우가 많다
# 연산을 수행한 이후, 결과를 bool 방식으로 받아서
# 출력하기 보다는, 값을 활용하여 분기를 나누거나, 반복을 수행한다.
print('{}'.format(True))
print('{}'.format(False))

